/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box; /* changes the box model of an element */
}

body {
	/* properties related to font are inherited from the body, doing it this way is more efficient*/
	font-family: "Lato", sans-serif;
	font-weight: 400;
	font-size: 16px;
	line-height: 1.7;
	color: #777;
	padding: 30px;
}

.header {
	height: 95vh; /* at every point in this page the height of this element is 95% of the viewport*/ /* linear-gradient adds a gradient in the direction you choose with the colors you choose*/
	background-image: linear-gradient(
		to right bottom, 
		rgba(126, 213, 111, 0.8), 
		rgba(40, 180, 131, 0.8)), 
	url(../img/hero.jpg); /* you can stack images on top of each other by seperating with a comma*/
	background-size: cover;
	background-position: top; /*background-position anchors the part of the image selected i.e. bottom, top, center so that whenever the viewport changes that point stays the same */

	clip-path: polygon(0 0, 100% 0,100% 75vh,0 100%); /* allows you clip part of an image based on coordinates*/ 

	position: relative;
}

.logo-box {
	position: absolute; 
	top: 40px;
	left: 40px;
	/* the element takes its position from the parent element in this case the header*/
}

.Logo {
	height: 35px; /* setting the height/width and the image will scale accordingly */
}

.Logo:hover {
	animation: moveInLeft 1s ease-out;
}

.text-box {
	position: absolute;
	top: 40%; /* in relation to the parent element*/
	left: 50%; /* in relation to the parent element*/
	transform: translate(-50%, -50%); /* shifts the element 50% top and right */
}

/* there are two types of  CSS animations 
	1. using the transition property
	2. keyframes
*/

.heading-primary {
	color: white;
	text-transform: uppercase;

	backface-visibility: hidden; /* fix for shake in animation - hides the part behind the element from the user */
}

/* using the span element allows us to style individual elements within an element*/

.heading-primary-main {
	display: block; /* allows the text to take up it's own block space*/
	font-size: 60px;
	font-weight: 400;
	letter-spacing: 35px;

	/* two things are needed in initiating an animation: animatio-name (name of the animation defined) animation-duration(how long)*/
	animation-name: moveInLeft;
	animation-duration: 1s;
	animation-timing-function: ease-in;
	/*
	animation-iteration-count: 3; repeats the animation
	animation-delay: 3s; delays the animation
	*/
}
 

.heading-primary-sub {
	display: block;
	font-size: 20px;
	font-weight: 700;
	letter-spacing: 17.4px;

	animation: moveInRight 1s ease-out;
}

/* for browser performance it's best to only animate opacity and transform */

@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-100px); /* transforms on the X left to right */
	}

	80% {
		transform: translateX(10px); /* a negative number is from the left while positive is right*/
	}

	100% {
		opacity: 1;
		transform: translate(0)
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(100px); /* transforms on the X left to right */
	}

	80% {
		transform: translateX(-10px); /* a negative number is from the left while positive is right*/
	}

	100% {
		opacity: 1;
		transform: translate(0)
	}
}